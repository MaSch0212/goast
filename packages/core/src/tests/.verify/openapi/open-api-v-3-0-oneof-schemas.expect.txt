[
  {
    '$src': {
      file: '<root>\\test\\openapi-files\\v3\\oneof-schemas.yml',
      path: '/components/schemas/EmptyOneOf',
      originalComponent: { oneOf: [] },
      component: { oneOf: [] }
    },
    '$ref': undefined,
    id: 'schema-1',
    name: 'EmptyOneOf',
    isNameGenerated: false,
    description: undefined,
    deprecated: false,
    accessibility: 'all',
    kind: 'oneOf',
    enum: undefined,
    default: undefined,
    example: undefined,
    nullable: false,
    required: Set(0) {},
    custom: {},
    not: undefined,
    const: undefined,
    oneOf: []
  },
  {
    '$src': {
      file: '<root>\\test\\openapi-files\\v3\\oneof-schemas.yml',
      path: '/components/schemas/OneOfSimpleTypes/oneOf/0',
      originalComponent: { type: 'string' },
      component: { type: 'string' }
    },
    '$ref': undefined,
    id: 'schema-3',
    name: 'schema-3',
    isNameGenerated: true,
    description: undefined,
    deprecated: false,
    accessibility: 'all',
    kind: 'string',
    enum: undefined,
    default: undefined,
    example: undefined,
    nullable: false,
    required: Set(0) {},
    custom: {},
    not: undefined,
    const: undefined,
    type: 'string',
    format: undefined,
    pattern: undefined,
    minLength: undefined,
    maxLength: undefined
  },
  {
    '$src': {
      file: '<root>\\test\\openapi-files\\v3\\oneof-schemas.yml',
      path: '/components/schemas/OneOfSimpleTypes/oneOf/1',
      originalComponent: { type: 'integer' },
      component: { type: 'integer' }
    },
    '$ref': undefined,
    id: 'schema-4',
    name: 'schema-4',
    isNameGenerated: true,
    description: undefined,
    deprecated: false,
    accessibility: 'all',
    kind: 'integer',
    enum: undefined,
    default: undefined,
    example: undefined,
    nullable: false,
    required: Set(0) {},
    custom: {},
    not: undefined,
    const: undefined,
    type: 'integer',
    format: undefined,
    minimum: undefined,
    maximum: undefined
  },
  {
    '$src': {
      file: '<root>\\test\\openapi-files\\v3\\oneof-schemas.yml',
      path: '/components/schemas/OneOfSimpleTypes',
      originalComponent: { oneOf: [ { type: 'string' }, { type: 'integer' } ] },
      component: { oneOf: [ { type: 'string' }, { type: 'integer' } ] }
    },
    '$ref': undefined,
    id: 'schema-2',
    name: 'OneOfSimpleTypes',
    isNameGenerated: false,
    description: undefined,
    deprecated: false,
    accessibility: 'all',
    kind: 'oneOf',
    enum: undefined,
    default: undefined,
    example: undefined,
    nullable: false,
    required: Set(0) {},
    custom: {},
    not: undefined,
    const: undefined,
    oneOf: [
      {
        '$src': {
          file: '<root>\\test\\openapi-files\\v3\\oneof-schemas.yml',
          path: '/components/schemas/OneOfSimpleTypes/oneOf/0',
          originalComponent: { type: 'string' },
          component: { type: 'string' }
        },
        '$ref': undefined,
        id: 'schema-3',
        name: 'schema-3',
        isNameGenerated: true,
        description: undefined,
        deprecated: false,
        accessibility: 'all',
        kind: 'string',
        enum: undefined,
        default: undefined,
        example: undefined,
        nullable: false,
        required: Set(0) {},
        custom: {},
        not: undefined,
        const: undefined,
        type: 'string',
        format: undefined,
        pattern: undefined,
        minLength: undefined,
        maxLength: undefined
      },
      {
        '$src': {
          file: '<root>\\test\\openapi-files\\v3\\oneof-schemas.yml',
          path: '/components/schemas/OneOfSimpleTypes/oneOf/1',
          originalComponent: { type: 'integer' },
          component: { type: 'integer' }
        },
        '$ref': undefined,
        id: 'schema-4',
        name: 'schema-4',
        isNameGenerated: true,
        description: undefined,
        deprecated: false,
        accessibility: 'all',
        kind: 'integer',
        enum: undefined,
        default: undefined,
        example: undefined,
        nullable: false,
        required: Set(0) {},
        custom: {},
        not: undefined,
        const: undefined,
        type: 'integer',
        format: undefined,
        minimum: undefined,
        maximum: undefined
      }
    ]
  },
  {
    '$src': {
      file: '<root>\\test\\openapi-files\\v3\\oneof-schemas.yml',
      path: '/components/schemas/IgnoreType',
      originalComponent: { type: 'string', oneOf: [] },
      component: { type: 'string', oneOf: [] }
    },
    '$ref': undefined,
    id: 'schema-5',
    name: 'IgnoreType',
    isNameGenerated: false,
    description: undefined,
    deprecated: false,
    accessibility: 'all',
    kind: 'oneOf',
    enum: undefined,
    default: undefined,
    example: undefined,
    nullable: false,
    required: Set(0) {},
    custom: {},
    not: undefined,
    const: undefined,
    oneOf: []
  },
  {
    '$src': {
      file: '<root>\\test\\openapi-files\\v3\\oneof-schemas.yml',
      path: '/components/schemas/WithReferences/oneOf/0',
      originalComponent: { '$ref': '#/components/schemas/EmptyOneOf' },
      component: { '$ref': '#/components/schemas/EmptyOneOf' }
    },
    '$ref': {
      '$src': {
        file: '<root>\\test\\openapi-files\\v3\\oneof-schemas.yml',
        path: '/components/schemas/EmptyOneOf',
        originalComponent: { oneOf: [] },
        component: { oneOf: [] }
      },
      '$ref': undefined,
      id: 'schema-1',
      name: 'EmptyOneOf',
      isNameGenerated: false,
      description: undefined,
      deprecated: false,
      accessibility: 'all',
      kind: 'oneOf',
      enum: undefined,
      default: undefined,
      example: undefined,
      nullable: false,
      required: Set(0) {},
      custom: {},
      not: undefined,
      const: undefined,
      oneOf: []
    },
    id: 'schema-7',
    name: 'schema-7',
    isNameGenerated: true,
    description: undefined,
    deprecated: false,
    accessibility: 'all',
    kind: 'oneOf',
    enum: undefined,
    default: undefined,
    example: undefined,
    nullable: false,
    required: Set(0) {},
    custom: {},
    not: undefined,
    const: undefined,
    oneOf: []
  },
  {
    '$src': {
      file: '<root>\\test\\openapi-files\\v3\\oneof-schemas.yml',
      path: '/components/schemas/WithReferences/oneOf/1',
      originalComponent: { '$ref': 'detailed-schemas.yml#/components/schemas/WithTitle' },
      component: { '$ref': 'detailed-schemas.yml#/components/schemas/WithTitle' }
    },
    '$ref': {
      '$src': {
        file: '<root>\\test\\openapi-files\\v3\\detailed-schemas.yml',
        path: '/components/schemas/WithTitle',
        document: {
          openapi: '3.0.0',
          info: { version: '1.0.0', title: 'Detailed Schemas' },
          paths: {
            '/x': {
              get: { responses: { '200': { description: '' } } }
            }
          },
          components: {
            schemas: {
              WithTitle: { title: 'My Title', type: 'string' },
              WithAllCommon: {
                description: 'My Description',
                type: 'string',
                format: 'email',
                default: 'john.doe@example.io',
                maxLength: 255,
                minLength: 5,
                pattern: '^[a-zA-Z0-9_.+-]+@[a-zA-Z0-9-]+\\.[a-zA-Z0-9-.]+$',
                nullable: true,
                deprecated: true,
                example: '<yours>@example.io'
              },
              MyEnum: { type: 'string', enum: [ 'one', 'two', 'three' ] },
              WriteOnly: { type: 'string', writeOnly: true },
              ReadOnly: { type: 'string', readOnly: true }
            }
          }
        },
        originalComponent: { title: 'My Title', type: 'string' },
        component: { title: 'My Title', type: 'string' }
      },
      '$ref': undefined,
      id: 'schema-9',
      name: 'My Title',
      isNameGenerated: false,
      description: undefined,
      deprecated: false,
      accessibility: 'all',
      kind: 'string',
      enum: undefined,
      default: undefined,
      example: undefined,
      nullable: false,
      required: Set(0) {},
      custom: {},
      not: undefined,
      const: undefined,
      type: 'string',
      format: undefined,
      pattern: undefined,
      minLength: undefined,
      maxLength: undefined
    },
    id: 'schema-8',
    name: 'schema-8',
    isNameGenerated: true,
    description: undefined,
    deprecated: false,
    accessibility: 'all',
    kind: 'string',
    enum: undefined,
    default: undefined,
    example: undefined,
    nullable: false,
    required: Set(0) {},
    custom: {},
    not: undefined,
    const: undefined,
    type: 'string',
    format: undefined,
    pattern: undefined,
    minLength: undefined,
    maxLength: undefined
  },
  {
    '$src': {
      file: '<root>\\test\\openapi-files\\v3\\oneof-schemas.yml',
      path: '/components/schemas/WithReferences/oneOf/2',
      originalComponent: { '$ref': 'simple-schemas.yml#/components/schemas/MyString' },
      component: { '$ref': 'simple-schemas.yml#/components/schemas/MyString' }
    },
    '$ref': {
      '$src': {
        file: '<root>\\test\\openapi-files\\v3\\simple-schemas.yml',
        path: '/components/schemas/MyString',
        document: {
          openapi: '3.0.0',
          info: { version: '1.0.0', title: 'Simple Schemas' },
          paths: {
            '/x': {
              get: { responses: { '200': { description: '' } } }
            }
          },
          components: {
            schemas: {
              MyString: { type: 'string' },
              MyInteger: { type: 'integer' },
              MyNumber: { type: 'number' },
              MyBoolean: { type: 'boolean' },
              MyArray: { type: 'array' },
              MyObject: { type: 'object' }
            }
          }
        },
        originalComponent: { type: 'string' },
        component: { type: 'string' }
      },
      '$ref': undefined,
      id: 'schema-11',
      name: 'MyString',
      isNameGenerated: false,
      description: undefined,
      deprecated: false,
      accessibility: 'all',
      kind: 'string',
      enum: undefined,
      default: undefined,
      example: undefined,
      nullable: false,
      required: Set(0) {},
      custom: {},
      not: undefined,
      const: undefined,
      type: 'string',
      format: undefined,
      pattern: undefined,
      minLength: undefined,
      maxLength: undefined
    },
    id: 'schema-10',
    name: 'schema-10',
    isNameGenerated: true,
    description: undefined,
    deprecated: false,
    accessibility: 'all',
    kind: 'string',
    enum: undefined,
    default: undefined,
    example: undefined,
    nullable: false,
    required: Set(0) {},
    custom: {},
    not: undefined,
    const: undefined,
    type: 'string',
    format: undefined,
    pattern: undefined,
    minLength: undefined,
    maxLength: undefined
  },
  {
    '$src': {
      file: '<root>\\test\\openapi-files\\v3\\oneof-schemas.yml',
      path: '/components/schemas/WithReferences/oneOf/3',
      originalComponent: { type: 'string' },
      component: { type: 'string' }
    },
    '$ref': undefined,
    id: 'schema-12',
    name: 'schema-12',
    isNameGenerated: true,
    description: undefined,
    deprecated: false,
    accessibility: 'all',
    kind: 'string',
    enum: undefined,
    default: undefined,
    example: undefined,
    nullable: false,
    required: Set(0) {},
    custom: {},
    not: undefined,
    const: undefined,
    type: 'string',
    format: undefined,
    pattern: undefined,
    minLength: undefined,
    maxLength: undefined
  },
  {
    '$src': {
      file: '<root>\\test\\openapi-files\\v3\\oneof-schemas.yml',
      path: '/components/schemas/WithReferences',
      originalComponent: {
        oneOf: [
          { '$ref': '#/components/schemas/EmptyOneOf' },
          {
            '$ref': 'detailed-schemas.yml#/components/schemas/WithTitle'
          },
          { '$ref': 'simple-schemas.yml#/components/schemas/MyString' },
          { type: 'string' }
        ]
      },
      component: {
        oneOf: [
          { '$ref': '#/components/schemas/EmptyOneOf' },
          {
            '$ref': 'detailed-schemas.yml#/components/schemas/WithTitle'
          },
          { '$ref': 'simple-schemas.yml#/components/schemas/MyString' },
          { type: 'string' }
        ]
      }
    },
    '$ref': undefined,
    id: 'schema-6',
    name: 'WithReferences',
    isNameGenerated: false,
    description: undefined,
    deprecated: false,
    accessibility: 'all',
    kind: 'oneOf',
    enum: undefined,
    default: undefined,
    example: undefined,
    nullable: false,
    required: Set(0) {},
    custom: {},
    not: undefined,
    const: undefined,
    oneOf: [
      {
        '$src': {
          file: '<root>\\test\\openapi-files\\v3\\oneof-schemas.yml',
          path: '/components/schemas/WithReferences/oneOf/0',
          originalComponent: { '$ref': '#/components/schemas/EmptyOneOf' },
          component: { '$ref': '#/components/schemas/EmptyOneOf' }
        },
        '$ref': {
          '$src': {
            file: '<root>\\test\\openapi-files\\v3\\oneof-schemas.yml',
            path: '/components/schemas/EmptyOneOf',
            originalComponent: { oneOf: [] },
            component: { oneOf: [] }
          },
          '$ref': undefined,
          id: 'schema-1',
          name: 'EmptyOneOf',
          isNameGenerated: false,
          description: undefined,
          deprecated: false,
          accessibility: 'all',
          kind: 'oneOf',
          enum: undefined,
          default: undefined,
          example: undefined,
          nullable: false,
          required: Set(0) {},
          custom: {},
          not: undefined,
          const: undefined,
          oneOf: []
        },
        id: 'schema-7',
        name: 'schema-7',
        isNameGenerated: true,
        description: undefined,
        deprecated: false,
        accessibility: 'all',
        kind: 'oneOf',
        enum: undefined,
        default: undefined,
        example: undefined,
        nullable: false,
        required: Set(0) {},
        custom: {},
        not: undefined,
        const: undefined,
        oneOf: []
      },
      {
        '$src': {
          file: '<root>\\test\\openapi-files\\v3\\oneof-schemas.yml',
          path: '/components/schemas/WithReferences/oneOf/1',
          originalComponent: {
            '$ref': 'detailed-schemas.yml#/components/schemas/WithTitle'
          },
          component: {
            '$ref': 'detailed-schemas.yml#/components/schemas/WithTitle'
          }
        },
        '$ref': {
          '$src': {
            file: '<root>\\test\\openapi-files\\v3\\detailed-schemas.yml',
            path: '/components/schemas/WithTitle',
            document: {
              openapi: '3.0.0',
              info: { version: '1.0.0', title: 'Detailed Schemas' },
              paths: {
                '/x': {
                  get: { responses: { '200': { description: '' } } }
                }
              },
              components: {
                schemas: {
                  WithTitle: { title: 'My Title', type: 'string' },
                  WithAllCommon: {
                    description: 'My Description',
                    type: 'string',
                    format: 'email',
                    default: 'john.doe@example.io',
                    maxLength: 255,
                    minLength: 5,
                    pattern: '^[a-zA-Z0-9_.+-]+@[a-zA-Z0-9-]+\\.[a-zA-Z0-9-.]+$',
                    nullable: true,
                    deprecated: true,
                    example: '<yours>@example.io'
                  },
                  MyEnum: { type: 'string', enum: [ 'one', 'two', 'three' ] },
                  WriteOnly: { type: 'string', writeOnly: true },
                  ReadOnly: { type: 'string', readOnly: true }
                }
              }
            },
            originalComponent: { title: 'My Title', type: 'string' },
            component: { title: 'My Title', type: 'string' }
          },
          '$ref': undefined,
          id: 'schema-9',
          name: 'My Title',
          isNameGenerated: false,
          description: undefined,
          deprecated: false,
          accessibility: 'all',
          kind: 'string',
          enum: undefined,
          default: undefined,
          example: undefined,
          nullable: false,
          required: Set(0) {},
          custom: {},
          not: undefined,
          const: undefined,
          type: 'string',
          format: undefined,
          pattern: undefined,
          minLength: undefined,
          maxLength: undefined
        },
        id: 'schema-8',
        name: 'schema-8',
        isNameGenerated: true,
        description: undefined,
        deprecated: false,
        accessibility: 'all',
        kind: 'string',
        enum: undefined,
        default: undefined,
        example: undefined,
        nullable: false,
        required: Set(0) {},
        custom: {},
        not: undefined,
        const: undefined,
        type: 'string',
        format: undefined,
        pattern: undefined,
        minLength: undefined,
        maxLength: undefined
      },
      {
        '$src': {
          file: '<root>\\test\\openapi-files\\v3\\oneof-schemas.yml',
          path: '/components/schemas/WithReferences/oneOf/2',
          originalComponent: { '$ref': 'simple-schemas.yml#/components/schemas/MyString' },
          component: { '$ref': 'simple-schemas.yml#/components/schemas/MyString' }
        },
        '$ref': {
          '$src': {
            file: '<root>\\test\\openapi-files\\v3\\simple-schemas.yml',
            path: '/components/schemas/MyString',
            document: {
              openapi: '3.0.0',
              info: { version: '1.0.0', title: 'Simple Schemas' },
              paths: {
                '/x': {
                  get: { responses: { '200': { description: '' } } }
                }
              },
              components: {
                schemas: {
                  MyString: { type: 'string' },
                  MyInteger: { type: 'integer' },
                  MyNumber: { type: 'number' },
                  MyBoolean: { type: 'boolean' },
                  MyArray: { type: 'array' },
                  MyObject: { type: 'object' }
                }
              }
            },
            originalComponent: { type: 'string' },
            component: { type: 'string' }
          },
          '$ref': undefined,
          id: 'schema-11',
          name: 'MyString',
          isNameGenerated: false,
          description: undefined,
          deprecated: false,
          accessibility: 'all',
          kind: 'string',
          enum: undefined,
          default: undefined,
          example: undefined,
          nullable: false,
          required: Set(0) {},
          custom: {},
          not: undefined,
          const: undefined,
          type: 'string',
          format: undefined,
          pattern: undefined,
          minLength: undefined,
          maxLength: undefined
        },
        id: 'schema-10',
        name: 'schema-10',
        isNameGenerated: true,
        description: undefined,
        deprecated: false,
        accessibility: 'all',
        kind: 'string',
        enum: undefined,
        default: undefined,
        example: undefined,
        nullable: false,
        required: Set(0) {},
        custom: {},
        not: undefined,
        const: undefined,
        type: 'string',
        format: undefined,
        pattern: undefined,
        minLength: undefined,
        maxLength: undefined
      },
      {
        '$src': {
          file: '<root>\\test\\openapi-files\\v3\\oneof-schemas.yml',
          path: '/components/schemas/WithReferences/oneOf/3',
          originalComponent: { type: 'string' },
          component: { type: 'string' }
        },
        '$ref': undefined,
        id: 'schema-12',
        name: 'schema-12',
        isNameGenerated: true,
        description: undefined,
        deprecated: false,
        accessibility: 'all',
        kind: 'string',
        enum: undefined,
        default: undefined,
        example: undefined,
        nullable: false,
        required: Set(0) {},
        custom: {},
        not: undefined,
        const: undefined,
        type: 'string',
        format: undefined,
        pattern: undefined,
        minLength: undefined,
        maxLength: undefined
      }
    ]
  }
]