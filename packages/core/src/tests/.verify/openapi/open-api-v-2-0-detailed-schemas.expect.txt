[
  {
    '$ref': undefined,
    '$src': {
      component: { title: 'My Title', type: 'string' },
      file: '<root>\\test\\openapi-files\\v2\\detailed-schemas.yml',
      originalComponent: { title: 'My Title', type: 'string' },
      path: '/definitions/WithTitle'
    },
    accessibility: 'all',
    const: undefined,
    custom: {},
    default: undefined,
    deprecated: false,
    description: undefined,
    discriminator: undefined,
    enum: undefined,
    example: undefined,
    format: undefined,
    id: 'schema-1',
    inheritedSchemas: [],
    isNameGenerated: false,
    kind: 'string',
    maxLength: undefined,
    minLength: undefined,
    name: 'My Title',
    not: undefined,
    nullable: false,
    pattern: undefined,
    required: Set(0) {},
    type: 'string'
  },
  {
    '$ref': undefined,
    '$src': {
      component: {
        default: 'john.doe@example.io',
        description: 'My Description',
        example: '<yours>@example.io',
        maxLength: 255,
        minLength: 5,
        pattern: '^[a-zA-Z0-9_.+-]+@[a-zA-Z0-9-]+\\.[a-zA-Z0-9-.]+$',
        type: 'string'
      },
      file: '<root>\\test\\openapi-files\\v2\\detailed-schemas.yml',
      originalComponent: {
        default: 'john.doe@example.io',
        description: 'My Description',
        example: '<yours>@example.io',
        maxLength: 255,
        minLength: 5,
        pattern: '^[a-zA-Z0-9_.+-]+@[a-zA-Z0-9-]+\\.[a-zA-Z0-9-.]+$',
        type: 'string'
      },
      path: '/definitions/WithAllCommon'
    },
    accessibility: 'all',
    const: undefined,
    custom: {},
    default: 'john.doe@example.io',
    deprecated: false,
    description: 'My Description',
    discriminator: undefined,
    enum: undefined,
    example: '<yours>@example.io',
    format: undefined,
    id: 'schema-2',
    inheritedSchemas: [],
    isNameGenerated: false,
    kind: 'string',
    maxLength: 255,
    minLength: 5,
    name: 'WithAllCommon',
    not: undefined,
    nullable: false,
    pattern: '^[a-zA-Z0-9_.+-]+@[a-zA-Z0-9-]+\\.[a-zA-Z0-9-.]+$',
    required: Set(0) {},
    type: 'string'
  },
  {
    '$ref': undefined,
    '$src': {
      component: { enum: [ 'one', 'two', 'three' ], type: 'string' },
      file: '<root>\\test\\openapi-files\\v2\\detailed-schemas.yml',
      originalComponent: { enum: [ 'one', 'two', 'three' ], type: 'string' },
      path: '/definitions/MyEnum'
    },
    accessibility: 'all',
    const: undefined,
    custom: {},
    default: undefined,
    deprecated: false,
    description: undefined,
    discriminator: undefined,
    enum: [ 'one', 'two', 'three' ],
    example: undefined,
    format: undefined,
    id: 'schema-3',
    inheritedSchemas: [],
    isNameGenerated: false,
    kind: 'string',
    maxLength: undefined,
    minLength: undefined,
    name: 'MyEnum',
    not: undefined,
    nullable: false,
    pattern: undefined,
    required: Set(0) {},
    type: 'string'
  },
  {
    '$ref': undefined,
    '$src': {
      component: { readOnly: true, type: 'string' },
      file: '<root>\\test\\openapi-files\\v2\\detailed-schemas.yml',
      originalComponent: { readOnly: true, type: 'string' },
      path: '/definitions/ReadOnly'
    },
    accessibility: 'readOnly',
    const: undefined,
    custom: {},
    default: undefined,
    deprecated: false,
    description: undefined,
    discriminator: undefined,
    enum: undefined,
    example: undefined,
    format: undefined,
    id: 'schema-4',
    inheritedSchemas: [],
    isNameGenerated: false,
    kind: 'string',
    maxLength: undefined,
    minLength: undefined,
    name: 'ReadOnly',
    not: undefined,
    nullable: false,
    pattern: undefined,
    required: Set(0) {},
    type: 'string'
  }
]