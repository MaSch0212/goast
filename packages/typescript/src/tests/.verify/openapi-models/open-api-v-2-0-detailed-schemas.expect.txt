┌──────────────────────────────────────┐
│ state                                │
├──────────────────────────────────────┤
{
  typescript: {
    indexFiles: { models: '<root>/out/models.ts' },
    models: {
      'schema-1': {
        __source__: '<root>/test/openapi-files/v2/detailed-schemas.yml#/definitions/WithTitle',
        additionalExports: [],
        component: 'MyTitle',
        filePath: '<root>/out/models/my-title.ts',
        imports: [
          {
            kind: 'file',
            modulePath: '<root>/out/models/my-title.ts',
            name: 'MyTitle'
          }
        ]
      },
      'schema-2': {
        __source__: '<root>/test/openapi-files/v2/detailed-schemas.yml#/definitions/WithAllCommon',
        additionalExports: [],
        component: 'WithAllCommon',
        filePath: '<root>/out/models/with-all-common.ts',
        imports: [
          {
            kind: 'file',
            modulePath: '<root>/out/models/with-all-common.ts',
            name: 'WithAllCommon'
          }
        ]
      },
      'schema-3': {
        __source__: '<root>/test/openapi-files/v2/detailed-schemas.yml#/definitions/MyEnum',
        additionalExports: [ 'MY_ENUM_VALUES' ],
        component: 'MyEnum',
        filePath: '<root>/out/models/my-enum.ts',
        imports: [
          {
            kind: 'file',
            modulePath: '<root>/out/models/my-enum.ts',
            name: 'MyEnum'
          }
        ]
      },
      'schema-4': {
        __source__: '<root>/test/openapi-files/v2/detailed-schemas.yml#/definitions/ReadOnly',
        additionalExports: [],
        component: 'ReadOnly',
        filePath: '<root>/out/models/read-only.ts',
        imports: [
          {
            kind: 'file',
            modulePath: '<root>/out/models/read-only.ts',
            name: 'ReadOnly'
          }
        ]
      }
    }
  }
}
└──────────────────────────────────────┘

┌──────────────────────────────────────┐
│ <root>/out/models/my-title.ts        │
├──────────────────────────────────────┤
export type MyTitle = string;

└──────────────────────────────────────┘

┌──────────────────────────────────────┐
│ <root>/out/models/with-all-common.ts │
├──────────────────────────────────────┤
/**
 * My Description
 */
export type WithAllCommon = string;

└──────────────────────────────────────┘

┌──────────────────────────────────────┐
│ <root>/out/models/my-enum.ts         │
├──────────────────────────────────────┤
export type MyEnum = ('one') | ('two') | ('three');

/**
 * All possible values of the enum `MyEnum`.
 */
export const MY_ENUM_VALUES = ['one', 'two', 'three'] as const;

└──────────────────────────────────────┘

┌──────────────────────────────────────┐
│ <root>/out/models/read-only.ts       │
├──────────────────────────────────────┤
export type ReadOnly = string;

└──────────────────────────────────────┘

┌──────────────────────────────────────┐
│ <root>/out/models.ts                 │
├──────────────────────────────────────┤
export { MY_ENUM_VALUES, MyEnum } from './models/my-enum';
export { MyTitle } from './models/my-title';
export { ReadOnly } from './models/read-only';
export { WithAllCommon } from './models/with-all-common';

└──────────────────────────────────────┘