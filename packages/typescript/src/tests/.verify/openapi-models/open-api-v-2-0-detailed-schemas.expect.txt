┌──────────────────────────────────────┐
│ state                                │
├──────────────────────────────────────┤
{
  modelIndexFilePath: '<root>\\out\\models.ts',
  models: {
    'schema-1': {
      __source__: '<root>\\test\\openapi-files\\v2\\detailed-schemas.yml#/definitions/WithTitle',
      component: 'MyTitle',
      filePath: '<root>\\out\\models\\my-title.ts',
      imports: [
        {
          kind: 'file',
          modulePath: '<root>\\out\\models\\my-title.ts',
          name: 'MyTitle'
        }
      ]
    },
    'schema-2': {
      __source__: '<root>\\test\\openapi-files\\v2\\detailed-schemas.yml#/definitions/WithAllCommon',
      component: 'WithAllCommon',
      filePath: '<root>\\out\\models\\with-all-common.ts',
      imports: [
        {
          kind: 'file',
          modulePath: '<root>\\out\\models\\with-all-common.ts',
          name: 'WithAllCommon'
        }
      ]
    },
    'schema-3': {
      __source__: '<root>\\test\\openapi-files\\v2\\detailed-schemas.yml#/definitions/MyEnum',
      component: 'MyEnum',
      filePath: '<root>\\out\\models\\my-enum.ts',
      imports: [
        {
          kind: 'file',
          modulePath: '<root>\\out\\models\\my-enum.ts',
          name: 'MyEnum'
        }
      ]
    },
    'schema-4': {
      __source__: '<root>\\test\\openapi-files\\v2\\detailed-schemas.yml#/definitions/ReadOnly',
      component: 'ReadOnly',
      filePath: '<root>\\out\\models\\read-only.ts',
      imports: [
        {
          kind: 'file',
          modulePath: '<root>\\out\\models\\read-only.ts',
          name: 'ReadOnly'
        }
      ]
    }
  }
}
└──────────────────────────────────────┘

┌──────────────────────────────────────┐
│ C:\src\goast\out\models\my-title.ts  │
├──────────────────────────────────────┤
export type MyTitle = string;

└──────────────────────────────────────┘

┌────────────────────────────────────────────┐
│ C:\src\goast\out\models\with-all-common.ts │
├────────────────────────────────────────────┤
export type WithAllCommon = string;

└────────────────────────────────────────────┘

┌──────────────────────────────────────┐
│ C:\src\goast\out\models\my-enum.ts   │
├──────────────────────────────────────┤
export type MyEnum = ('one') | ('two') | ('three');

└──────────────────────────────────────┘

┌──────────────────────────────────────┐
│ C:\src\goast\out\models\read-only.ts │
├──────────────────────────────────────┤
export type ReadOnly = string;

└──────────────────────────────────────┘

┌──────────────────────────────────────┐
│ C:\src\goast\out\models.ts           │
├──────────────────────────────────────┤
export { MyEnum } from './models/my-enum';
export { MyTitle } from './models/my-title';
export { ReadOnly } from './models/read-only';
export { WithAllCommon } from './models/with-all-common';

└──────────────────────────────────────┘