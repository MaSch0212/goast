Map(8) {
  '<root>\\out\\models\\my-string.model.ts' => 'export type MyString = string;\n',
  '<root>\\out\\models\\my-integer.model.ts' => 'export type MyInteger = number;\n',
  '<root>\\out\\models\\my-number.model.ts' => 'export type MyNumber = number;\n',
  '<root>\\out\\models\\my-boolean.model.ts' => 'export type MyBoolean = boolean;\n',
  '<root>\\out\\models\\my-array.model.ts' => 'export type MyArray = Array<unknown>;\n',
  '<root>\\out\\models\\my-object.model.ts' => 'export type MyObject = {};\n',
  '<root>\\out\\models.ts' => "export { MyArray } from './models/my-array.model';\n" +
    "export { MyBoolean } from './models/my-boolean.model';\n" +
    "export { MyInteger } from './models/my-integer.model';\n" +
    "export { MyNumber } from './models/my-number.model';\n" +
    "export { MyObject } from './models/my-object.model';\n" +
    "export { MyString } from './models/my-string.model';\n",
  'state' => {
    models: {
      'schema-1': {
        typeName: 'MyString',
        filePath: '<root>\\out\\models\\my-string.model.ts'
      },
      'schema-2': {
        typeName: 'MyInteger',
        filePath: '<root>\\out\\models\\my-integer.model.ts'
      },
      'schema-3': {
        typeName: 'MyNumber',
        filePath: '<root>\\out\\models\\my-number.model.ts'
      },
      'schema-4': {
        typeName: 'MyBoolean',
        filePath: '<root>\\out\\models\\my-boolean.model.ts'
      },
      'schema-5': {
        typeName: 'MyArray',
        filePath: '<root>\\out\\models\\my-array.model.ts'
      },
      'schema-6': {
        typeName: 'MyObject',
        filePath: '<root>\\out\\models\\my-object.model.ts'
      }
    },
    modelIndexFilePath: '<root>\\out\\models.ts'
  }
}